Przygotować implementację realizującą ADT LIST na bazie tablicy o zmieniającym się rozmiarze. Będzie to klasa ArrayList umieszczona w pliku arraylist.h. Początkowy rozmiar tablicy (min_size) może wynosić 2 lub 4. Po zapełnieniu tablicy rozmiar może się powiększać o stałą wartość lub może się podwajać (wybrać jedną możliwość). Po usunięciu pewnej liczby elementów tablica może się zmniejszać, aż do osiągnięcia początkowego rozmiaru minimalnego.

Wprowadzenie

ADT LIST reprezentuje skończoną liczbę uporządkowanych elementów,
które mogą się powtarzać. Typowe operacje dla ADT LIST są następujące :

-konstruktor tworzący pustą listę,
-testowanie, czy lista nie jest pusta[empty()],
-odczyt liczby elementów na liście[size()],
-dołączanie elementu na początek listy[push_front(item)],
-dołączanie elementu na koniec listy[push_back(item)],
-dostęp do głowy(head), czyli pierwszego(lewego skrajnego) elementu[front()],
-dostęp do ogona(tail), czyli ostatniego(prawego skrajnego) elementu[back()],
-usunięcie elementu pierwszego[pop_front()],
-usunięcie elementu ostatniego[pop_back()],
-czyszczenie listy[clear()],
-dostęp do elementu o danym indeksie i,
-dołączanie elementu przed element na pozycji i[insert()],
-usunięcie elementu o danym indeksie i[erase()],
-sortowanie listy[sort()],
-łączenie dwóch posortowanych list w jedną[merge()].
